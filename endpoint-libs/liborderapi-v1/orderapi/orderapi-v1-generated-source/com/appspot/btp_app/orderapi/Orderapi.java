/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-03-26 20:30:19 UTC)
 * on 2015-04-07 at 09:15:34 UTC 
 * Modify at your own risk.
 */

package com.appspot.btp_app.orderapi;

/**
 * Service definition for Orderapi (v1).
 *
 * <p>
 * orderapi
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link OrderapiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Orderapi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the orderapi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://btp-app.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "orderapi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Orderapi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Orderapi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getOrder".
   *
   * This request holds the parameters needed by the orderapi server.  After setting any optional
   * parameters, call the {@link GetOrder#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetOrder getOrder(java.lang.Long id) throws java.io.IOException {
    GetOrder result = new GetOrder(id);
    initialize(result);
    return result;
  }

  public class GetOrder extends OrderapiRequest<com.appspot.btp_app.orderapi.model.Order> {

    private static final String REST_PATH = "order/{id}";

    /**
     * Create a request for the method "getOrder".
     *
     * This request holds the parameters needed by the the orderapi server.  After setting any
     * optional parameters, call the {@link GetOrder#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetOrder#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetOrder(java.lang.Long id) {
      super(Orderapi.this, "GET", REST_PATH, null, com.appspot.btp_app.orderapi.model.Order.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetOrder setAlt(java.lang.String alt) {
      return (GetOrder) super.setAlt(alt);
    }

    @Override
    public GetOrder setFields(java.lang.String fields) {
      return (GetOrder) super.setFields(fields);
    }

    @Override
    public GetOrder setKey(java.lang.String key) {
      return (GetOrder) super.setKey(key);
    }

    @Override
    public GetOrder setOauthToken(java.lang.String oauthToken) {
      return (GetOrder) super.setOauthToken(oauthToken);
    }

    @Override
    public GetOrder setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetOrder) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetOrder setQuotaUser(java.lang.String quotaUser) {
      return (GetOrder) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetOrder setUserIp(java.lang.String userIp) {
      return (GetOrder) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetOrder setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetOrder set(String parameterName, Object value) {
      return (GetOrder) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getPlacedOrders".
   *
   * This request holds the parameters needed by the orderapi server.  After setting any optional
   * parameters, call the {@link GetPlacedOrders#execute()} method to invoke the remote operation.
   *
   * @param no
   * @return the request
   */
  public GetPlacedOrders getPlacedOrders(java.lang.String no) throws java.io.IOException {
    GetPlacedOrders result = new GetPlacedOrders(no);
    initialize(result);
    return result;
  }

  public class GetPlacedOrders extends OrderapiRequest<com.appspot.btp_app.orderapi.model.CollectionResponseOrder> {

    private static final String REST_PATH = "collectionresponse_order/{no}";

    /**
     * Create a request for the method "getPlacedOrders".
     *
     * This request holds the parameters needed by the the orderapi server.  After setting any
     * optional parameters, call the {@link GetPlacedOrders#execute()} method to invoke the remote
     * operation. <p> {@link GetPlacedOrders#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param no
     * @since 1.13
     */
    protected GetPlacedOrders(java.lang.String no) {
      super(Orderapi.this, "GET", REST_PATH, null, com.appspot.btp_app.orderapi.model.CollectionResponseOrder.class);
      this.no = com.google.api.client.util.Preconditions.checkNotNull(no, "Required parameter no must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetPlacedOrders setAlt(java.lang.String alt) {
      return (GetPlacedOrders) super.setAlt(alt);
    }

    @Override
    public GetPlacedOrders setFields(java.lang.String fields) {
      return (GetPlacedOrders) super.setFields(fields);
    }

    @Override
    public GetPlacedOrders setKey(java.lang.String key) {
      return (GetPlacedOrders) super.setKey(key);
    }

    @Override
    public GetPlacedOrders setOauthToken(java.lang.String oauthToken) {
      return (GetPlacedOrders) super.setOauthToken(oauthToken);
    }

    @Override
    public GetPlacedOrders setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetPlacedOrders) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetPlacedOrders setQuotaUser(java.lang.String quotaUser) {
      return (GetPlacedOrders) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetPlacedOrders setUserIp(java.lang.String userIp) {
      return (GetPlacedOrders) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String no;

    /**

     */
    public java.lang.String getNo() {
      return no;
    }

    public GetPlacedOrders setNo(java.lang.String no) {
      this.no = no;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public GetPlacedOrders setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @Override
    public GetPlacedOrders set(String parameterName, Object value) {
      return (GetPlacedOrders) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getReceivedOrders".
   *
   * This request holds the parameters needed by the orderapi server.  After setting any optional
   * parameters, call the {@link GetReceivedOrders#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetReceivedOrders getReceivedOrders() throws java.io.IOException {
    GetReceivedOrders result = new GetReceivedOrders();
    initialize(result);
    return result;
  }

  public class GetReceivedOrders extends OrderapiRequest<com.appspot.btp_app.orderapi.model.CollectionResponseOrder> {

    private static final String REST_PATH = "collectionresponse_order";

    /**
     * Create a request for the method "getReceivedOrders".
     *
     * This request holds the parameters needed by the the orderapi server.  After setting any
     * optional parameters, call the {@link GetReceivedOrders#execute()} method to invoke the remote
     * operation. <p> {@link GetReceivedOrders#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetReceivedOrders() {
      super(Orderapi.this, "GET", REST_PATH, null, com.appspot.btp_app.orderapi.model.CollectionResponseOrder.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetReceivedOrders setAlt(java.lang.String alt) {
      return (GetReceivedOrders) super.setAlt(alt);
    }

    @Override
    public GetReceivedOrders setFields(java.lang.String fields) {
      return (GetReceivedOrders) super.setFields(fields);
    }

    @Override
    public GetReceivedOrders setKey(java.lang.String key) {
      return (GetReceivedOrders) super.setKey(key);
    }

    @Override
    public GetReceivedOrders setOauthToken(java.lang.String oauthToken) {
      return (GetReceivedOrders) super.setOauthToken(oauthToken);
    }

    @Override
    public GetReceivedOrders setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetReceivedOrders) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetReceivedOrders setQuotaUser(java.lang.String quotaUser) {
      return (GetReceivedOrders) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetReceivedOrders setUserIp(java.lang.String userIp) {
      return (GetReceivedOrders) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public GetReceivedOrders setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @Override
    public GetReceivedOrders set(String parameterName, Object value) {
      return (GetReceivedOrders) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertOrder".
   *
   * This request holds the parameters needed by the orderapi server.  After setting any optional
   * parameters, call the {@link InsertOrder#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.btp_app.orderapi.model.Order}
   * @return the request
   */
  public InsertOrder insertOrder(com.appspot.btp_app.orderapi.model.Order content) throws java.io.IOException {
    InsertOrder result = new InsertOrder(content);
    initialize(result);
    return result;
  }

  public class InsertOrder extends OrderapiRequest<com.appspot.btp_app.orderapi.model.Order> {

    private static final String REST_PATH = "order";

    /**
     * Create a request for the method "insertOrder".
     *
     * This request holds the parameters needed by the the orderapi server.  After setting any
     * optional parameters, call the {@link InsertOrder#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertOrder#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.btp_app.orderapi.model.Order}
     * @since 1.13
     */
    protected InsertOrder(com.appspot.btp_app.orderapi.model.Order content) {
      super(Orderapi.this, "POST", REST_PATH, content, com.appspot.btp_app.orderapi.model.Order.class);
    }

    @Override
    public InsertOrder setAlt(java.lang.String alt) {
      return (InsertOrder) super.setAlt(alt);
    }

    @Override
    public InsertOrder setFields(java.lang.String fields) {
      return (InsertOrder) super.setFields(fields);
    }

    @Override
    public InsertOrder setKey(java.lang.String key) {
      return (InsertOrder) super.setKey(key);
    }

    @Override
    public InsertOrder setOauthToken(java.lang.String oauthToken) {
      return (InsertOrder) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertOrder setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertOrder) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertOrder setQuotaUser(java.lang.String quotaUser) {
      return (InsertOrder) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertOrder setUserIp(java.lang.String userIp) {
      return (InsertOrder) super.setUserIp(userIp);
    }

    @Override
    public InsertOrder set(String parameterName, Object value) {
      return (InsertOrder) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeOrder".
   *
   * This request holds the parameters needed by the orderapi server.  After setting any optional
   * parameters, call the {@link RemoveOrder#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveOrder removeOrder(java.lang.Long id) throws java.io.IOException {
    RemoveOrder result = new RemoveOrder(id);
    initialize(result);
    return result;
  }

  public class RemoveOrder extends OrderapiRequest<Void> {

    private static final String REST_PATH = "order/{id}";

    /**
     * Create a request for the method "removeOrder".
     *
     * This request holds the parameters needed by the the orderapi server.  After setting any
     * optional parameters, call the {@link RemoveOrder#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveOrder#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveOrder(java.lang.Long id) {
      super(Orderapi.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveOrder setAlt(java.lang.String alt) {
      return (RemoveOrder) super.setAlt(alt);
    }

    @Override
    public RemoveOrder setFields(java.lang.String fields) {
      return (RemoveOrder) super.setFields(fields);
    }

    @Override
    public RemoveOrder setKey(java.lang.String key) {
      return (RemoveOrder) super.setKey(key);
    }

    @Override
    public RemoveOrder setOauthToken(java.lang.String oauthToken) {
      return (RemoveOrder) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveOrder setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveOrder) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveOrder setQuotaUser(java.lang.String quotaUser) {
      return (RemoveOrder) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveOrder setUserIp(java.lang.String userIp) {
      return (RemoveOrder) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveOrder setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveOrder set(String parameterName, Object value) {
      return (RemoveOrder) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateOrder".
   *
   * This request holds the parameters needed by the orderapi server.  After setting any optional
   * parameters, call the {@link UpdateOrder#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.btp_app.orderapi.model.Order}
   * @return the request
   */
  public UpdateOrder updateOrder(com.appspot.btp_app.orderapi.model.Order content) throws java.io.IOException {
    UpdateOrder result = new UpdateOrder(content);
    initialize(result);
    return result;
  }

  public class UpdateOrder extends OrderapiRequest<com.appspot.btp_app.orderapi.model.Order> {

    private static final String REST_PATH = "order";

    /**
     * Create a request for the method "updateOrder".
     *
     * This request holds the parameters needed by the the orderapi server.  After setting any
     * optional parameters, call the {@link UpdateOrder#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateOrder#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.btp_app.orderapi.model.Order}
     * @since 1.13
     */
    protected UpdateOrder(com.appspot.btp_app.orderapi.model.Order content) {
      super(Orderapi.this, "PUT", REST_PATH, content, com.appspot.btp_app.orderapi.model.Order.class);
    }

    @Override
    public UpdateOrder setAlt(java.lang.String alt) {
      return (UpdateOrder) super.setAlt(alt);
    }

    @Override
    public UpdateOrder setFields(java.lang.String fields) {
      return (UpdateOrder) super.setFields(fields);
    }

    @Override
    public UpdateOrder setKey(java.lang.String key) {
      return (UpdateOrder) super.setKey(key);
    }

    @Override
    public UpdateOrder setOauthToken(java.lang.String oauthToken) {
      return (UpdateOrder) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateOrder setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateOrder) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateOrder setQuotaUser(java.lang.String quotaUser) {
      return (UpdateOrder) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateOrder setUserIp(java.lang.String userIp) {
      return (UpdateOrder) super.setUserIp(userIp);
    }

    @Override
    public UpdateOrder set(String parameterName, Object value) {
      return (UpdateOrder) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Orderapi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Orderapi}. */
    @Override
    public Orderapi build() {
      return new Orderapi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link OrderapiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setOrderapiRequestInitializer(
        OrderapiRequestInitializer orderapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(orderapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
